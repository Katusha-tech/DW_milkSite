# –û–ø–∏—à–µ–º —Å–∏–≥–Ω–∞–ª, –∫–æ—Ç–æ—Ä—ã–π –±—É–¥–µ—Ç —Å–ª—É—à–∞—Ç—å —Å–æ–∑–¥–∞–Ω–∏–µ –∑–∞–ø–∏—Å–∏ –≤ –º–æ–¥–µ–ª—å Review 
# –∏ –ø—Ä–æ–≤–µ—Ä—è—Ç—å –µ—Å—Ç—å –ª–∏ –≤ –ø–æ–ª–µ text —Å–ª–æ–≤–∞ "–ø–ª–æ—Ö–æ" –∏–ª–∏ "—É–∂–∞—Å–Ω–æ" - –µ—Å–ª–∏ –Ω–µ—Ç, —Ç–æ –º–µ–Ω—è–µ–º is_published –Ω–∞ True
from .models import Order, Review
from django.db.models.signals import post_save, m2m_changed
from django.dispatch import receiver
from .mistral import is_bad_review
from .telegram_bot import send_telegram_message
from asyncio import run
from telegram.error import BadRequest
from asgiref.sync import async_to_sync
# –ò–∑ –Ω–∞—Å—Ç—Ä–æ–µ–∫ –∏–º–ø–æ—Ä—Ç–∏—Ä—É–º —Ç–æ–∫–µ–Ω –∏ id —á–∞—Ç–∞ 
from django.conf import settings

TELEGRAM_BOT_API_KEY = settings.TELEGRAM_BOT_API_KEY
TELEGRAM_USER_ID = settings.TELEGRAM_USER_ID


@receiver(post_save, sender=Review)
def check_review_text(sender, instance, created, **kwargs):
    """ 
    –ü—Ä–æ–≤–µ—Ä—è–µ—Ç —Ç–µ–∫—Å—Ç –æ—Ç–∑—ã–≤–∞ –Ω–∞ –Ω–∞–ª–∏—á–∏–µ —Å–ª–æ–≤ '–ø–ª–æ—Ö–æ' –∏–ª–∏ '—É–∂–∞—Å–Ω–æ'. 
    –ï—Å–ª–∏ —Ç–∞–∫–∏—Ö —Å–ª–æ–≤ –Ω–µ—Ç, —Ç–æ —É—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º is_published = True
    """
    if created:
        if not is_bad_review(instance.text):
            instance.is_published = True
            instance.save()
            # –û—Ç–ø—Ä–∞–≤–∫–∞ –≤ —Ç–µ–ª–µ–≥—Ä–∞–º
            message = f"""
üéâ*–ù–æ–≤—ã–π –æ—Ç–∑—ã–≤ –æ—Ç –∫–ª–∏–µ–Ω—Ç–∞!*üéâ

üë§*–ò–º—è:* {instance.client_name}
üí¨*–¢–µ–∫—Å—Ç:* {instance.text}
‚≠ê*–û—Ü–µ–Ω–∫–∞:* {instance.rating}

üîó*–°—Å—ã–ª–∫–∞ –Ω–∞ –æ—Ç–∑—ã–≤:* http://127.0.0.1:8000/admin/core/review/{instance.id}/change/

#–æ—Ç–∑—ã–≤
=================
"""
            run(send_telegram_message(TELEGRAM_BOT_API_KEY, TELEGRAM_USER_ID, message))

        else:
            instance.is_published = False
            instance.save()
            # –í—ã–≤–æ–¥  –≤ —Ç–µ—Ä–º–∏–Ω–∞–ª
            print(f"–û—Ç–∑—ã–≤ {instance.client_name} –Ω–µ –æ–ø—É–±–ª–∏–∫–æ–≤–∞–Ω –∏–∑-–∑–∞ –Ω–µ–≥–∞—Ç–∏–≤–Ω—ã—Ö —Å–ª–æ–≤.")


@receiver(m2m_changed, sender=Order.products.through)
def send_telegram_notification(sender, instance, action, **kwargs):
    """
    –û–±—Ä–∞–±–æ—Ç–∫–∞ —Å–∏–≥–Ω–∞–ª–∞ m2m_changed –¥–ª—è –º–æ–¥–µ–ª–∏ Order.
    –û–Ω –æ–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç –¥–æ–±–∞–≤–ª–µ–Ω–∏–µ –∫–∞–∂–¥–æ–π —É—Å–ª—É–≥–∏ –≤ –∑–∞–ø–∏—Å—å –Ω–∞ –∫–æ–Ω—Å—É–ª—å—Ç–∞—Ü–∏—é.
    """
    if action == 'post_add' and kwargs.get('pk_set'):
        # –ü–æ–ª—É—á–∞–µ–º —Å–ø–∏—Å–æ–∫ —É—Å–ª—É–≥
        products = [product.name for product in instance.products.all()]

        # –§–æ—Ä–º–∏—Ä—É–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ

        message = f"""ü•õ *–ù–û–í–ê–Ø –ó–ê–ü–ò–°–¨ –ù–ê –£–°–õ–£–ì–£!* ü•õ

üë§*–ò–º—è:* {instance.client_name}
üìû*–¢–µ–ª–µ—Ñ–æ–Ω:* `{instance.phone or '–ù–µ —É–∫–∞–∑–∞–Ω'}`
üí¨*–ö–æ–º–º–µ–Ω—Ç–∞—Ä–∏–π:* _{instance.comment or '–ù–µ —É–∫–∞–∑–∞–Ω'}_
üì¶*–ü—Ä–æ–¥—É–∫—Ç—ã:* {', '.join(products) or '–ù–µ —É–∫–∞–∑–∞–Ω—ã'}
üóìÔ∏è *–î–∞—Ç–∞ —Å–æ–∑–¥–∞–Ω–∏—è:* {instance.date_created.strftime('%d.%m.%Y %H:%M') if instance.date_created else '–ù–µ —É–∫–∞–∑–∞–Ω–∞'}
üìÖ*–ñ–µ–ª–∞–µ–º—ã–π –¥–µ–Ω—å:* {instance.delivery_day or '–ù–µ —É–∫–∞–∑–∞–Ω'}

üîó*–°—Å—ã–ª–∫–∞ –Ω–∞ –∑–∞–ø–∏—Å—å:* http://127.0.0.1:8000/admin/core/order/{instance.id}/change/
        
#–Ω–æ–≤—ã–π–∑–∞–∫–∞–∑
====================
""" 
        run(send_telegram_message(TELEGRAM_BOT_API_KEY, TELEGRAM_USER_ID, message))